//scopeに関して理解をする。
//実行中のコードから値と式が参照できる範囲。
//実行式から見えるものがスコープ
//５種類JSにはある。　
//グローバルスコープ、スクリプトスコープ、関数スコープ、ブロックスコープ、モジュールスコープ
//まず４つについて学習する。
//グローバルスコープとスクリプトスコープ
let a = 0;
var b  = 0;
function c () {}
// debugger; //ここに達した時点で実行が一時的に止められる。
//scopeに script a : 0とglobalというのが記載されている。
//これが今回だとdebuggerから見える範囲のスコープ
//globaにはwindoとb の変数,関数cが確認できる。
//var やfunctionで定義をするとwindowオブジェクトに格納される。
//let constはscriptに表示されるようになる。
//これがグローバルとスクリプトの違い。

//グローバルスクリプトについて、
//一般的に変数bを呼び出すときにconsole.log(window.b);とはしない。
console.log(b);//とする
//グローバルオブジェクトは省略可能 windowをつけてもつけなくてもいい。　
//windowオブジェクト自体がグローバルスコープになっている。
window.d = 1;// とするとグローバルオブジェクトにd = 1が追加されているので
console.log(d);//とすると表示される。
//グローバルコンテキスト内で宣言した変数は、宣言に使用したキーワードによってスクリプトやグローバルスコープに格納される。
//使い勝手は変わらない。
//window.dとした後let d =と設定するとlet dが優先される。
//スコープチェーンによってどちらを参照するかが決められている。


