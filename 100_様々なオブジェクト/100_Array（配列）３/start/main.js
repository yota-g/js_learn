//arry part3 reduceに関して学ぶ
const arry = [1, 2, 3, 4, 5];

const result = arry.reduce(function(accu , curr) { //コールバック関数。アキュレートとカレント の引数を渡す。引数名は何でもいい。
  console.log(accu, curr); //１ループ目は配列の最初の２つが渡ってくるが、２ループ目以降は、前のループのaccuとcurrを足したものがaccuに格納されている。currは前回のcurrの次の’要素が格納されている。
  return accu + curr*2;
},0 )
console.log(result);
//全ての数字を足し合わせた数字が結果として表示される。
//reduceは１つ１つを結合したりしてまとめるという役割をもつ。
//accuに前のリターン分で戻したものが格納されて実行されるのがreduce
//最後のループでは戻り値でaccuとcurrと足した結果がreturnとして戻ってきてresultに返って格納される。
//reduceの第二引数に0を渡すと、第二引数は、１ループ目のaccuに格納されて渡ってくる。そのため一回ループが増える
//reduceを使う場合は、配列に何らかの操作をしてから結合や乗算加算をすることが多い。
//１ループ目のaccuを初期値（reduceの第二引数で設定）とすることで配列の要素が全てcurrに渡ってくるようにする。
//そうすることで2倍した値を返したい時などに配列の１つ目だけが計算されないということをなくすことができる。
//初期値がないと値の結果が変わってしまう。操作が必要な時は必ず第二引数に初期値を入れること。
